This directory contains files to build the python interfaces
to the functions of V2.3 SPAMS library already interfaced with matlab.

The interface consists of 4 files : spams.py myscipy_rand.py spams_wrap.py _spams_wrap.so
Note: myscipy_rand.py supplies a random generator for sparse matrix
      for some old scipy distributions
WARNING : the API of spams.OMP and spams.OMPMask has changed since version V2.2
########################################
Interface building 

Packages required: python-numpy, python-scipy, blas + lapack (preferably from atlas).

tar zxf spams-python.tar.gz
cd spams-python
python setup.py build

inst=<your-python-install-dir>
python setup.py install --prefix=$inst

################################
Linux : 
      carefully install atlas. For example on my ubuntu I had to do
      apt-get install libatlas-dev libatlas3gf-base libatlas-3gf.so
      If you don't have libblas.so and liblapack.so in /lib or /usr/lib,
      you need to edit setup.py

MacOS:
	the build has been tested with MacOS 10 (Lion) and required
	packages installed with 'port install'
	port install atlas;port install py26-numpy;install py26-scipy

Windows:
	You need packages MinGW, python-2.7, scipy and numpy for python-2.7
	
	You will find binary distributions for MinGW on www.mingw.org,
	python-2.7 on www.python.org,
	numpy and scipy on www.numpy.org (or www.scipy.org)
	Unfortunately, I did not find a binary distro for atlas.
`	I use blas and lapack dlls fron the package R (2.15.1).
	I found dlls for blas and lapcak on http://icl.cs.utk.edu/lapack-for-windows/lapack.
	They work fine, but are slower.
	
 	To make a binary windows installer (spams-2.3.win32-py2.7.exe0 :
	- open a mingw console
	- extract files from the .tar.gz source distribution (tar zxf ...)
	- enter directory spams-python
	- execute ./win-build.sh
	 Note : you may need to modify the script if you have different versions of python and R.
	- when you installer is build, you may remove the package R.
	
########################################
Testing the interface :

- Linux or Mac :
export PYTHONPATH=$inst/lib/python2.6/site-packages
cd $inst/test
python test_spams.py -h : to get help
python test_spams.py  : will run all the tests
python test_spams.py linalg : test of linalg functions
python test_spams.py name1 name2 ... : run named tests

- Windows (binary install) :
  cd C:\Python27\test
  ..\python.exe test_spams.py -h
  ..\python.exe test_spams.py
  	  ...

Warning : for now the python interface is mising a little subset of the functions
	described in the documentation of SPAMS.

########################################
Using the interface :
setup your PYTHONPATH

import spams

The spams functions accept only numpy dense vectors or "Fortran" matrices and
scipy sparce matrices of csc type.

Examples :

-----
import numpy as np
import spams
X = np.asfortranarray(np.random.random((64,200)))
Y = np.asfortranarray(np.random.random((200,20000)))
Z = spams.CalcXY(X,Y)
----
import numpy as np
import scipy
import scipy.sparse
import spams

if not ('rand' in scipy.sparse.__dict__):
    import myscipy as ssp
else:
    import scipy.sparse as ssp
    m=200; n = 200000; d= 0.05
    A = ssp.rand(m,n,density=d,format='csc',dtype=np.float64)
    B = spams.CalcAAt(A)
-----
